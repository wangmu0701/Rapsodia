// This file was generated by Rapsodia (see www.mcs.anl.gov/Rapsodia)
#include <iostream>
#include <cstdlib>
#include <cmath>
#include "RAle.hpp"

bool operator <=(const RAfloatS& a, const RAfloatS& b) {
  bool r;
  #include "RAleAA.ipp"
  return r;
}

bool operator <=(const RAfloatS& a, const RAfloatD& b) {
  bool r;
  #include "RAleAA.ipp"
  return r;
}

bool operator <=(const RAfloatD& a, const RAfloatS& b) {
  bool r;
  #include "RAleAA.ipp"
  return r;
}

bool operator <=(const RAfloatD& a, const RAfloatD& b) {
  bool r;
  #include "RAleAA.ipp"
  return r;
}

bool operator <=(const RAfloatS& a, const int& b) {
  bool r;
  #include "RAleAP.ipp"
  return r;
}

bool operator <=(const RAfloatS& a, const float& b) {
  bool r;
  #include "RAleAP.ipp"
  return r;
}

bool operator <=(const RAfloatS& a, const double& b) {
  bool r;
  #include "RAleAP.ipp"
  return r;
}

bool operator <=(const RAfloatD& a, const int& b) {
  bool r;
  #include "RAleAP.ipp"
  return r;
}

bool operator <=(const RAfloatD& a, const float& b) {
  bool r;
  #include "RAleAP.ipp"
  return r;
}

bool operator <=(const RAfloatD& a, const double& b) {
  bool r;
  #include "RAleAP.ipp"
  return r;
}

bool operator <=(const int& a, const RAfloatS& b) {
  bool r;
  #include "RAlePA.ipp"
  return r;
}

bool operator <=(const int& a, const RAfloatD& b) {
  bool r;
  #include "RAlePA.ipp"
  return r;
}

bool operator <=(const float& a, const RAfloatS& b) {
  bool r;
  #include "RAlePA.ipp"
  return r;
}

bool operator <=(const float& a, const RAfloatD& b) {
  bool r;
  #include "RAlePA.ipp"
  return r;
}

bool operator <=(const double& a, const RAfloatS& b) {
  bool r;
  #include "RAlePA.ipp"
  return r;
}

bool operator <=(const double& a, const RAfloatD& b) {
  bool r;
  #include "RAlePA.ipp"
  return r;
}

