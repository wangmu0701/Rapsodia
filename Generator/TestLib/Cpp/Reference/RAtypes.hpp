// This file was generated by Rapsodia (see www.mcs.anl.gov/Rapsodia)
#ifndef _RAtypes_INCLUDE_
#define _RAtypes_INCLUDE_
  #include "RAprec.hpp"
  // RAfloatS
  struct RAfloatS {
    float v;
    float d1_1;
    float d1_2;
    float d1_3;
    float d1_4;
    float d1_5;
    float d1_6;
    float d1_7;
    float d1_8;
    float d1_9;
    float d1_10;
    float d2_1;
    float d2_2;
    float d2_3;
    float d2_4;
    float d2_5;
    float d2_6;
    float d2_7;
    float d2_8;
    float d2_9;
    float d2_10;
    float d3_1;
    float d3_2;
    float d3_3;
    float d3_4;
    float d3_5;
    float d3_6;
    float d3_7;
    float d3_8;
    float d3_9;
    float d3_10;
    RAfloatS();
    float get(const int& direction, const int& degree);
    void set(const int& direction, const int& degree, const float& passive);
    const RAfloatS& operator =(const int& r);
    const RAfloatS& operator =(const float& r);
    RAfloatS(const int& r);
    RAfloatS(const float& r);
    static const unsigned int arrSz = 31;
    void toArray(float arr[arrSz]);
    void fromArray(float arr[arrSz]);
  };
  // RAfloatD
  struct RAfloatD {
    double v;
    double d1_1;
    double d1_2;
    double d1_3;
    double d1_4;
    double d1_5;
    double d1_6;
    double d1_7;
    double d1_8;
    double d1_9;
    double d1_10;
    double d2_1;
    double d2_2;
    double d2_3;
    double d2_4;
    double d2_5;
    double d2_6;
    double d2_7;
    double d2_8;
    double d2_9;
    double d2_10;
    double d3_1;
    double d3_2;
    double d3_3;
    double d3_4;
    double d3_5;
    double d3_6;
    double d3_7;
    double d3_8;
    double d3_9;
    double d3_10;
    RAfloatD();
    double get(const int& direction, const int& degree);
    void set(const int& direction, const int& degree, const double& passive);
    const RAfloatD& operator =(const RAfloatS& r);
    const RAfloatD& operator =(const int& r);
    const RAfloatD& operator =(const float& r);
    const RAfloatD& operator =(const double& r);
    RAfloatD(const RAfloatS& r);
    RAfloatD(const int& r);
    RAfloatD(const float& r);
    RAfloatD(const double& r);
    static const unsigned int arrSz = 31;
    void toArray(double arr[arrSz]);
    void fromArray(double arr[arrSz]);
  };
  float makeFPE(const float& n, const float& d);
#endif
